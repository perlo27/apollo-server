# import Vote, LinkSubscriptionPayload, VoteSubscriptionPayload, LinkOrderByInput from "./generated/prisma.graphql"

type Query {
    info: String!
    feed(filter: String, , skip: Int, first: Int, orderBy: LinkOrderByInput): Feed!
    # Fetch a single link by its `id`
    link(id: ID!): Link
    getUser: User!
}

type Mutation {
    post(url: String!, description: String!): Link!
    updateLnk(id: ID!, url: String, description: String): Link
    deleteLnk(id: ID!): Link
    signup(email: String!, password: String!, name: String!): AuthPayload
    login(email: String!, password: String!): AuthPayload
    vote(linkId: ID!): Vote
}

type Subscription {
    newLink: LinkSubscriptionPayload
    newVote: VoteSubscriptionPayload
}

type Feed {
    links: [Link!]!
    count: Int!
}

type AuthPayload {
    token: String
    user: User
}

type User {
    id: ID!
    name: String!
    email: String!
    links: [Link!]!
}

type Link {
    id: ID!
    createdAt: DateTime!
    description: String!
    url: String!
    postedBy: User
    votes: [Vote!]!
    votesCount: Int!
}
